---
import Layout from '../layouts/Layout.astro';

interface BackgroundShape {
    className: string;
    style?: string;
}

interface Props {
    title: string;
    variant: 'chess' | 'shogi' | 'xiangqi';
    showBackButton?: boolean;
}

const { title, variant, showBackButton = true } = Astro.props as Props;

const backgroundShapes: Record<Props['variant'], BackgroundShape[]> = {
    chess: [
        {
            className:
                'absolute top-10 left-10 w-32 h-32 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full opacity-10 animate-pulse',
        },
        {
            className:
                'absolute bottom-10 right-10 w-48 h-48 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full opacity-10 animate-ping',
            style: 'animation-delay: 2s;',
        },
        {
            className:
                'absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-full opacity-5 animate-spin',
            style: 'animation-duration: 20s;',
        },
    ],
    shogi: [
        {
            className:
                'absolute top-1/4 left-1/4 w-2 h-2 bg-orange-300 rounded-full opacity-30 animate-pulse',
        },
        {
            className:
                'absolute top-3/4 right-1/3 w-1 h-1 bg-red-300 rounded-full opacity-40 animate-ping',
            style: 'animation-delay: 1s;',
        },
        {
            className:
                'absolute top-1/2 left-3/4 w-3 h-3 bg-yellow-300 rounded-full opacity-20 animate-bounce',
            style: 'animation-delay: 2s;',
        },
        {
            className:
                'absolute top-1/6 right-1/4 w-2 h-2 bg-orange-400 rounded-full opacity-30 animate-pulse',
            style: 'animation-delay: 3s;',
        },
    ],
    xiangqi: [
        {
            className:
                'absolute top-10 left-10 w-32 h-32 bg-gradient-to-r from-red-500 to-yellow-500 rounded-full opacity-10 animate-pulse',
        },
        {
            className:
                'absolute bottom-10 right-10 w-48 h-48 bg-gradient-to-r from-amber-500 to-red-500 rounded-full opacity-10 animate-ping',
            style: 'animation-delay: 2s;',
        },
        {
            className:
                'absolute top-1/3 right-1/4 w-24 h-24 bg-gradient-to-r from-yellow-500 to-amber-500 rounded-full opacity-10 animate-bounce',
            style: 'animation-delay: 1s;',
        },
        {
            className:
                'absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-r from-red-500 to-amber-500 rounded-full opacity-5 animate-spin',
            style: 'animation-duration: 25s;',
        },
    ],
};
---

<Layout title={title}>
    <div class='min-h-screen relative'>
        <div class='absolute inset-0 overflow-hidden pointer-events-none'>
            {
                backgroundShapes[variant].map(({ className, style }, index) => (
                    <div class={className} style={style} key={index} />
                ))
            }
        </div>

        <div class='container mx-auto px-4 py-8 relative z-10'>
            {
                showBackButton && (
                    <a
                        href='/'
                        class='glass-effect inline-flex items-center gap-3 px-6 py-3 rounded-xl text-white font-medium transition-all duration-300 hover:bg-white hover:bg-opacity-20 hover:scale-105 hover:shadow-lg'
                    >
                        <svg
                            width='20'
                            height='20'
                            viewBox='0 0 24 24'
                            fill='none'
                            stroke='currentColor'
                            stroke-width='2'
                            stroke-linecap='round'
                            stroke-linejoin='round'
                        >
                            <path d='M19 12H5M12 19l-7-7 7-7' />
                        </svg>
                        Back to Game Selection
                    </a>
                )
            }

            <slot />
        </div>
    </div>
</Layout>
